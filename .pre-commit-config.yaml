# Configuration file for the pre-commit tool
# It is used to run tests on CI and on your machine
#
# installation: pip install pre-commit
#
# setup: pre-commit install
#
# Now tests will be run automatically at each commit
# Or you can run the tests with: pre-commit run -a
#
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v4.6.0
      hooks:
          - id: trailing-whitespace
          - id: end-of-file-fixer
          - id: check-yaml
          - id: check-json
          - id: check-toml
          - id: check-xml
    - repo: local
      hooks:
          - id: autopep8
            name: autopep8
            entry: autopep8
            language: system
            types_or: [python]
            require_serial: true
            args: ["-i"]
          - id: isort
            name: isort
            entry: isort
            language: system
            types_or: [python, pyi]
            require_serial: true
            args: ['--filter-files']
          - id: mypy
            name: mypy
            entry: mypy
            language: system
            types_or: [python, pyi]
            args: ["--scripts-are-modules"]
          - id: pylint
            name: pylint
            entry: pylint
            language: system
            types_or: [python]
            args: [
              "-rn", # Only display the messages
              "-sn", # Don't display the score
            ]
            stages: [manual]
          - id: unittest
            name: unit tests
            entry: python -m unittest discover --start-directory tests
            language: system
            always_run: true
            pass_filenames: false
            fail_fast: true
          - id: end2endtest
            name: end-to-end tests
            entry: python -m unittest discover --start-directory tests_end_to_end
            language: system
            always_run: false
            pass_filenames: false
            stages: [manual]
            fail_fast: true
          - id: coverage
            name: coverage
            entry: sh -c "coverage run > /dev/null ; coverage report"
            language: system
            pass_filenames: false
            stages: [manual]
